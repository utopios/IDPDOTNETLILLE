{"version":3,"sources":["services/ApiService.js","Containers/Creation.js","Containers/Identification.js","history.js","Components/Navside.js","Components/Imc/Imc.js","Components/Imcs/Imcs.js","Containers/Affichage.js","Containers/Home.js","Containers/Affichage-mois.js","Containers/Affichage-tri.js","Containers/FormPoids.js","Routes.js","serviceWorker.js","index.js"],"names":["url","get","path","axios","post","data","Creation","props","useState","nom","setNom","password","setWord","age","setAge","taille","setTaille","poids","setPoids","visible","setVisible","history","useHistory","layout","labelCol","span","wrapperCol","className","id","title","onOk","e","push","onCancel","name","validateMessages","required","types","number","range","Item","value","label","rules","onChange","target","Password","type","min","max","offset","htmlType","onClick","user","mdp","console","log","then","res","response","msg","localStorage","getItem","setItem","JSON","stringify","secondsToGo","modal","Modal","success","content","timer","setInterval","update","setTimeout","clearInterval","destroy","countDown","to","Identification","email","error","countDown2","Navside","appelList","setState","listImcBrut","modificationTableauSemaine","tab","state","tableau","reverse","indiceActuel","indice","listImcFinal","creationJauge","form","deconnexion","userActuel","undefined","Gauge","document","getElementById","text","width","height","color","statistic","render","parse","userNom","this","imcs","listImcCal","class","aria-hidden","Component","Imc","imc","etat","date","style","backgroundColor","taille1","taille2","taille3","taille4","counter-block","m-t-10","p-15","effort","description","Imcs","map","element","index","key","Affichage","Home","tabSem","length","i","jour","Line","LoadingOutlined","createG2","chart","line","position","shape","size","Column","Table","AffichageMois","modificationTableauMois","tabMois","creationGraph","dataIndice","inverseTab","dataElement","delete","preventDefault","showModal","handleOk","isDelete","handleCancel","plotCfg","margin","etatColor","dataSource","dataIndex","record","AffichageTri","modificationTableauTri","calculDataPie","compteurMaigre","compteurNormal","compteurSurpoids","compteurObesite","compteurMorbide","dataPie","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","placeholder","onPressEnter","handleSearch","marginBottom","display","icon","SearchOutlined","handleReset","filterIcon","filtered","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","select","searchedColumn","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","antIcon","fontSize","spin","columns","rowClassName","chartType","loader","indicator","options","rootProps","Formpoids","componentSize","setComponentSize","setDate","listUser","setListuser","setUserActuel","load","useEffect","initialValues","onValuesChange","Group","Button","selected","userTrouve","user1","alert","Routes","stat","exact","FormPoids","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"mVAEMA,EAAM,yBAECC,EAAM,SAAAC,GACjB,OAAOC,IAAMF,IAAID,EAAME,IAGZE,EAAO,SAACF,EAAMG,GACzB,OAAOF,IAAMC,KAAKJ,EAAME,EAAMG,I,iBCoLjBC,EArLE,SAAAC,GAAU,IAAD,EACFC,qBADE,mBACjBC,EADiB,KACZC,EADY,OAEIF,qBAFJ,mBAEjBG,EAFiB,KAEPC,EAFO,OAGFJ,qBAHE,mBAGjBK,EAHiB,KAGZC,EAHY,OAIIN,qBAJJ,mBAIjBO,EAJiB,KAITC,EAJS,OAKER,qBALF,mBAKjBS,EALiB,KAKVC,EALU,OAMMV,qBANN,mBAMjBW,EANiB,KAMRC,EANQ,KAQlBC,EAAUC,cAmEhB,IAAMC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAIV,OACE,yBAAKE,UAAU,YAAYC,GAAG,YAC5B,kBAAC,IAAD,CACEC,MAAM,UACNV,QAASA,EACTW,KAjEW,SAAAC,GACfV,EAAQW,KAAK,SACbZ,GAAW,IAgEPa,SA7De,SAAAF,GACnBX,GAAW,KA8DP,uEAGF,2CACA,kBAAC,IAAD,iBACMG,EADN,CAEEW,KAAK,gBACLC,iBAzFmB,CACvBC,SAAU,wBACVC,MAAO,CACLC,OAAQ,sCAEVA,OAAQ,CACNC,MAAO,oDAqFL,kBAAC,IAAKC,KAAN,CACEN,KAAK,MACLO,MAAOhC,EACPiC,MAAM,OACNC,MAAO,CACL,CACEP,UAAU,IAGdQ,SAAU,SAAAb,GAAC,OAAIrB,EAAOqB,EAAEc,OAAOJ,SAE/B,kBAAC,IAAD,OAEF,kBAAC,IAAKD,KAAN,CACEN,KAAK,UACLQ,MAAM,WACNC,MAAO,CACL,CACEP,UAAU,IAGdQ,SAAU,SAAAb,GAAC,OAAInB,EAAQmB,EAAEc,OAAOJ,SAEhC,kBAAC,IAAMK,SAAP,OAEF,kBAAC,IAAKN,KAAN,CACEN,KAAK,MACLQ,MAAM,MACNC,MAAO,CACL,CACEI,KAAM,SACNX,UAAU,EACVY,IAAK,EACLC,IAAK,KAGTL,SAAU,SAAAb,GAAC,OAAIjB,EAAOiB,EAAEc,OAAOJ,SAE/B,kBAAC,IAAD,OAEF,kBAAC,IAAKD,KAAN,CACEN,KAAK,SACLQ,MAAM,SACNC,MAAO,CACL,CACEI,KAAM,SACNX,UAAU,IAGdQ,SAAU,SAAAb,GAAC,OAAIf,EAAUe,EAAEc,OAAOJ,SAElC,kBAAC,IAAD,OAEF,kBAAC,IAAKD,KAAN,CACEN,KAAK,QACLQ,MAAM,QACNC,MAAO,CACL,CACEI,KAAM,SACNX,UAAU,IAGdQ,SAAU,SAAAb,GAAC,OAAIb,EAASa,EAAEc,OAAOJ,SAEjC,kBAAC,IAAD,OAEF,kBAAC,IAAKD,KAAN,CAAWd,WAAU,2BAAOH,EAAOG,YAAd,IAA0BwB,OAAQ,KACrD,kBAAC,IAAD,CAAQH,KAAK,UAAUI,SAAS,SAASC,QAvIlC,WACb,IAAMC,EAAO,CACX5C,IAAKA,EACL6C,IAAK3C,EACLE,IAAKA,EACLI,MAAOA,EACPF,OAAQA,GAEVwC,QAAQC,IAAIH,GACZjD,EAAK,WAAYiD,GAAMI,MAAK,SAAAC,GAC1B,IAAMC,EAAWD,EAAIrD,KACrBkD,QAAQC,IAAIG,GACQ,gBAAhBA,EAASC,KAxBfxC,GAAW,GA0B6B,MAAhCyC,aAAaC,QAAQ,SACvBD,aAAaE,QAAQ,OAAQC,KAAKC,UAAUZ,KAQpD,WACE,IAAIa,EAAc,EACZC,EAAQC,IAAMC,QAAQ,CAC1BxC,MAAO,eACPyC,QAAQ,mCAEJC,EAAQC,aAAY,WACxBN,GAAe,EACfC,EAAMM,OAAO,CACXH,QAAQ,iEAAD,OAA6DJ,EAA7D,gBAER,KACHQ,YAAW,WACTC,cAAcJ,GACdJ,EAAMS,UACNvD,EAAQW,KAAK,MACE,IAAdkC,GArBCW,QAqHE,cADF,iBAKE,0BAAMlD,UAAU,cAAhB,qDAEE,kBAAC,IAAD,CAAMmD,GAAG,KAAT,kBCrBGC,EAxJQ,SAAAxE,GAAU,IAAD,EACRC,qBADQ,mBACvBC,EADuB,KAClBC,EADkB,OAEFF,qBAFE,mBAEvBG,EAFuB,KAEbC,EAFa,OAGAJ,qBAHA,mBAGvBW,EAHuB,KAGdC,EAHc,KAIxBC,EAAUC,cAaVC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KA8EV,OACE,yBAAKE,UAAU,4BACb,8CACA,kBAAC,IAAD,CACEE,MAAM,UACNV,QAASA,EACTW,KA5EW,SAAAC,GACfV,EAAQW,KAAK,SACbZ,GAAW,IA2EPa,SAxEe,SAAAF,GACnBX,GAAW,KAyEP,sDAGF,kBAAC,IAAD,iBAAUG,EAAV,CAAkBY,iBA1GG,CACvBC,SAAU,wBACVC,MAAO,CACL2C,MAAO,kCACP1C,OAAQ,sCAEVA,OAAQ,CACNC,MAAO,iDAoGL,kBAAC,IAAKC,KAAN,CACEN,KAAK,MACLQ,MAAM,OACNC,MAAO,CACL,CACEP,UAAU,IAGdQ,SAAU,SAAAb,GAAC,OAAIrB,EAAOqB,EAAEc,OAAOJ,SAE/B,kBAAC,IAAD,OAEF,kBAAC,IAAKD,KAAN,CACEN,KAAK,WACLQ,MAAM,WACNC,MAAO,CACL,CACEP,UAAU,IAGdQ,SAAU,SAAAb,GAAC,OAAInB,EAAQmB,EAAEc,OAAOJ,SAEhC,kBAAC,IAAMK,SAAP,OAGF,kBAAC,IAAKN,KAAN,CAAWd,WAAU,2BAAOH,EAAOG,YAAd,IAA0BwB,OAAQ,KACrD,kBAAC,IAAD,CAAQH,KAAK,UAAUI,SAAS,SAASC,QApGlC,WACb,IAAMC,EAAO,CACX5C,IAAKA,EACL6C,IAAK3C,GAGPP,EAAK,iBAAkBiD,GAAMI,MAAK,SAAAC,GAChC,IAAMC,EAAWD,EAAIrD,KAEA,qBAAjBsD,EAASC,KACyB,OAAjCC,aAAaC,QAAQ,UACtBP,QAAQC,IAAIH,GACZQ,aAAaE,QAAQ,OAAQC,KAAKC,UAAUZ,KAxBlDjC,GAAW,IA2BmB,8BAAjBuC,EAASC,IAOxB,WACE,IAAIM,EAAc,EACZC,EAAQC,IAAMa,MAAM,CACxBpD,MAAO,SACPyC,QAAQ,kCAEJC,EAAQC,aAAY,WACxBN,GAAe,EACfC,EAAMM,OAAO,CACXH,QAAQ,mEAAD,OACLJ,EADK,gBAGR,KACHQ,YAAW,WACTC,cAAcJ,GACdJ,EAAMS,UACNvD,EAAQW,KAAK,MACE,IAAdkC,GAvBCW,GAC0B,eAAjBlB,EAASC,KAwBxB,WACE,IAAIM,EAAc,EACZC,EAAQC,IAAMa,MAAM,CACxBpD,MAAO,SACPyC,QAAQ,kCAEJC,EAAQC,aAAY,WACxBN,GAAe,EACfC,EAAMM,OAAO,CACXH,QAAQ,6CAAD,OACLJ,EADK,gBAGR,KACHQ,YAAW,WACTC,cAAcJ,GACdJ,EAAMS,UACNvD,EAAQW,KAAK,MACE,IAAdkC,GAxCCgB,QAkFE,cADF,iBAKE,0BAAMvD,UAAU,cAAhB,+CAEE,kBAAC,IAAD,CAAMmD,GAAG,YAAT,oB,QCxJGzD,gB,SC6JA8D,E,kDApJb,WAAY5E,GAAQ,IAAD,8BACjB,cAAMA,IAmBR6E,UAAY,SAAA/B,GACVpD,EAAI,eAAiBoD,GAAMI,MAAK,SAAAC,GAC9BH,QAAQC,IAAIE,EAAIrD,MAChB,EAAKgF,SAAS,CACZC,YAAa5B,EAAIrD,OAEnB,EAAKkF,iCA1BU,EA8BnBA,2BAA6B,WAC3B,IAAMC,EAAM,EAAKC,MAAMH,YACvB/B,QAAQC,IAAIgC,GACZ,IAAME,EAAUF,EAAIG,UAEhBC,EADUF,EAAQ,GACKG,OAC3B,EAAKR,SAAS,CACZS,aAAcJ,EACdE,aAAcA,IAEhB,EAAKG,iBAxCY,EA2CnBC,KAAO,WACL3E,EAAQW,KAAK,UA5CI,EA+CnBiE,YAAc,WACZ,EAAKZ,SAAS,CACZa,gBAAYC,IAEd,EAAKtB,aAnDY,EA2EnBkB,cAAgB,WACI,IAAIK,IAAMC,SAASC,eAAe,aAAc,CAChEzE,MAAO,CACLV,SAAS,EACToF,KAAM,cAERC,MAAO,IACPC,OAAQ,IACRhE,MAAO,EAAKgD,MAAMG,aAClB5C,IAAK,EACLC,IAAK,GACLV,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAC3BmE,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,WACpDC,UAAW,CACTxF,SAAS,EACToF,KAAM,MACNG,MAAO,aAGDE,UA5FV,EAAKnB,MAAQ,CACXS,gBAAYC,EACZP,kBAAcO,GAJC,E,gEASjB,GAAoC,MAAhCtC,aAAaC,QAAQ,QAAiB,CACxCP,QAAQC,IAAIK,aAAaC,QAAQ,SACjC,IAAMT,EAAOW,KAAK6C,MAAMhD,aAAaC,QAAQ,SACvCgD,EAAUzD,EAAK5C,IACrBsG,KAAK1B,SAAS,CACZa,WAAYY,IAEdC,KAAK3B,UAAU/B,EAAK5C,Q,kCAuCtB,IAAIyD,EAAc,EACZC,EAAQC,IAAMa,MAAM,CACxBpD,MAAO,cACPyC,QAAQ,kCAEJC,EAAQC,aAAY,WACxBN,GAAe,EACfC,EAAMM,OAAO,CACXH,QAAQ,6BAAD,OACLJ,EADK,iBAGR,KACHQ,YAAW,WACTC,cAAcJ,GACdJ,EAAMS,UACNvD,EAAQW,KAAK,OACE,IAAdkC,K,+BA0BH,OACE,yBACE8C,KAAMD,KAAKxG,MAAM0G,WACjBtF,UAAU,0BACVC,GAAG,WAEH,wBAAIsF,MAAM,mBAAV,aACA,yBAAKA,MAAM,aAAatF,GAAG,SACzB,yBAAKsF,MAAM,aAAaH,KAAKtB,MAAMS,aAErC,8BAEA,yBAAKgB,MAAM,OACT,wBAAIA,MAAM,iBAAV,uBACA,yBAAKA,MAAM,aACT,kBAAC,IAAD,CAAMpC,GAAG,SACP,4BACE,uBAAGoC,MAAM,8BAA8BC,cAAY,SADrD,YAKF,kBAAC,IAAD,CAAMrC,GAAG,SACP,4BACE,uBAAGoC,MAAM,sBAAsBC,cAAY,SAD7C,UAIF,kBAAC,IAAD,CAAMrC,GAAG,QACP,4BACE,uBAAGoC,MAAM,6BAA6BC,cAAY,SADpD,eAMJ,yBAAKD,MAAM,OACT,kBAAC,IAAD,CAAQA,MAAM,cAAcnE,KAAK,UAAUK,QAAS2D,KAAKf,MAAzD,oBAGA,kBAAC,IAAD,CACEkB,MAAM,cACNnE,KAAK,UACLK,QAAS2D,KAAKd,aAHhB,iBASJ,yBAAKrE,GAAG,mB,GAhJMwF,aCkGPC,G,yDAvGb,WAAY9G,GAAQ,IAAD,8BACjB,cAAMA,IACDkF,MAAQ,CACXiB,WAAOP,GAHQ,E,gEASjB,IAAIO,EADJnD,QAAQC,IAAIuD,KAAKxG,MAAM+G,IAAIC,MAEA,YAAvBR,KAAKxG,MAAM+G,IAAIC,KACjBb,EAAQ,OACwB,UAAvBK,KAAKxG,MAAM+G,IAAIC,KACxBb,EAAQ,QACwB,YAAvBK,KAAKxG,MAAM+G,IAAIC,KACxBb,EAAQ,SACwB,iBAAvBK,KAAKxG,MAAM+G,IAAIC,KACxBb,EAAQ,MACwB,aAAvBK,KAAKxG,MAAM+G,IAAIC,OACxBb,EAAQ,SAEVK,KAAK1B,SAAS,CACZqB,MAAOA,M,+BAOT,OAFFnD,QAAQC,IAAIuD,KAAKxG,MAAM+G,IAAI7G,KAGvB,yBAAKyG,MAAM,iBAAiBtF,GAAG,aAC7B,yBAAKsF,MAAM,eACT,wCACA,yBAAKvF,UAAU,UAAUoF,KAAKxG,MAAM+G,IAAIzB,SAE1C,yBAAKqB,MAAM,cACT,wBAAIA,MAAM,yBAAyBH,KAAKxG,MAAM+G,IAAIE,MAClD,6BACE,wBAAIN,MAAM,gCACR,wBACEA,MAAOH,KAAKxG,MAAM+G,IAAIvG,OAAOA,OAC7B0G,MAAO,CACLC,gBAAkD,UAAhCX,KAAKxG,MAAM+G,IAAIvG,OAAOA,OACpCgG,KAAKtB,MAAMiB,MACX,WAGR,wBACEQ,MAAOH,KAAKxG,MAAM+G,IAAIvG,OAAO4G,QAC7BF,MAAO,CACLC,gBAAmD,UAAjCX,KAAKxG,MAAM+G,IAAIvG,OAAO4G,QACpCZ,KAAKtB,MAAMiB,MACX,WAGR,wBACEQ,MAAOH,KAAKxG,MAAM+G,IAAIvG,OAAO6G,QAC7BH,MAAO,CACLC,gBAAmD,UAAjCX,KAAKxG,MAAM+G,IAAIvG,OAAO6G,QACpCb,KAAKtB,MAAMiB,MACX,WAGR,wBACEQ,MAAOH,KAAKxG,MAAM+G,IAAIvG,OAAO8G,QAC7BJ,MAAO,CACLC,gBAAmD,UAAjCX,KAAKxG,MAAM+G,IAAIvG,OAAO8G,QACpCd,KAAKtB,MAAMiB,MACX,WAGR,wBACEQ,MAAOH,KAAKxG,MAAM+G,IAAIvG,OAAO+G,QAC7BL,MAAO,CACLC,gBAAmD,UAAjCX,KAAKxG,MAAM+G,IAAIvG,OAAO+G,QACpCf,KAAKtB,MAAMiB,MACX,YAIV,yBAAKQ,MAAOH,KAAKxG,MAAM+G,IAAIZ,OACzB,yBAAKQ,MAAM,eAAea,iBAAA,EAAcC,UAAA,EAAOC,QAAA,GAC7C,yBAAKf,MAAM,YAAYtF,GAAG,SACxB,uBAAGsF,MAAM,aAAaC,cAAY,SAClC,6BAAOJ,KAAKxG,MAAM+G,IAAIrG,QAExB,yBAAKiG,MAAM,YAAYtF,GAAG,SACxB,uBAAGsF,MAAM,uBAAuBC,cAAY,SAC5C,yBAAKxF,UAAU,QAAQoF,KAAKxG,MAAM+G,IAAIC,OAExC,yBAAKL,MAAM,YAAYtF,GAAG,SACxB,uBAAGsF,MAAM,kBAAkBC,cAAY,SACvC,6BAAMJ,KAAKxG,MAAM+G,IAAIY,WAI3B,uBAAGhB,MAAM,qBAAqBH,KAAKxG,MAAM+G,IAAIa,oB,GAjGvCf,cCiBHgB,E,kDAjBf,WAAY7H,GAAO,IAAD,8BAChB,cAAOA,IACJkF,MAAQ,GAFK,E,qDAMhB,OACE,yBAAK9D,UAAU,MAAMC,GAAG,WACrBmF,KAAKxG,MAAM+G,IAAIe,KAAI,SAACC,EAASC,GAAV,OAChB,kBAAC,EAAD,CAAKjB,IAAKgB,EAASE,IAAKD,Y,GAVfnB,aCkBJqB,E,kDAdb,WAAYlI,GAAQ,IAAD,8BACjB,cAAMA,IACDkF,MAAQ,GAFI,E,qDAMjB,OACE,yBAAK9D,UAAU,oBACX,kBAAC,EAAD,CAAM2F,IAAKP,KAAKxG,MAAM0G,kB,GATRG,aC6DTsB,E,kDA3Db,WAAYnI,GAAQ,IAAD,8BACjB,cAAMA,IAiBR6E,UAAY,SAAA/B,GACVpD,EAAI,eAAiBoD,GAAMI,MAAK,SAAAC,GAC9B,EAAK2B,SAAS,CACZC,YAAa5B,EAAIrD,OAEnB,EAAKkF,iCAvBU,EA2BnBA,2BAA6B,WAC3B,IAAMoD,EAAS,GACTnD,EAAM,EAAKC,MAAMH,YACvB/B,QAAQC,IAAIgC,GACZ,IAAME,EAAUF,EAAIG,UACpB,GAAID,EAAQkD,OAAS,EAAG,CACtB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIC,EAAOpD,EAAQmD,GACnBF,EAAO3G,KAAK8G,GAEd,EAAKzD,SAAS,CACZS,aAAc6C,SAGhB,EAAKtD,SAAS,CACZS,aAAcJ,KAxClB,EAAKD,MAAQ,CACXS,gBAAYC,EACZb,YAAa,GACbQ,aAAc,IALC,E,gEAUjB,IAAMzC,EAAOW,KAAK6C,MAAMhD,aAAaC,QAAQ,SACvCgD,EAAUzD,EAAK5C,IACrBsG,KAAK1B,SAAS,CACZa,WAAYY,IAEdC,KAAK3B,UAAU/B,EAAK5C,O,+BAiCpB,OACE,yBAAKkB,UAAU,wBACb,kBAAC,EAAD,CAASA,UAAU,UACnB,kBAAC,EAAD,CACEA,UAAU,QACVsF,WAAYF,KAAKtB,MAAMK,oB,GAtDdsB,a,sDCQb2B,GAFWC,EAAA,EAEJC,KAAS,SAAAC,GACpBA,EACGC,OACAC,SAAS,eACT1C,MAAM,WACN2C,MAAM,UACNC,KAAK,GACRJ,EAAMtC,aAEA2C,EAAWC,IAAXD,OAwLOE,E,kDArLb,WAAYlJ,GAAQ,IAAD,8BACjB,cAAMA,IA0BR6E,UAAY,SAAA/B,GACVpD,EAAI,eAAiBoD,GAAMI,MAAK,SAAAC,GAC9B,EAAK2B,SAAS,CACZC,YAAa5B,EAAIrD,OAEnB,EAAKqJ,8BAhCU,EAoCnBA,wBAA0B,WACxB,IAAMC,EAAU,GACVnE,EAAM,EAAKC,MAAMH,YACvB/B,QAAQC,IAAIgC,GACZ,IAAME,EAAUF,EAAIG,UACpB,GAAID,EAAQkD,OAAS,GAAI,CACvB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIC,EAAOpD,EAAQmD,GACnBc,EAAQ3H,KAAK8G,GAEf,EAAKzD,SAAS,CACZS,aAAc6D,SAGhB,EAAKtE,SAAS,CACZS,aAAcJ,IAGlB,EAAKkE,iBAtDY,EAyDnBA,cAAgB,WACd,IADoB,EAChBC,EAAa,GACXC,EAAa,EAAKrE,MAAMK,aAAaH,UAFvB,cAGAmE,GAHA,IAGpB,2BAAgC,CAAC,IAAxBxB,EAAuB,QAC1ByB,EAAc,CAChBvC,KAAMc,EAAQd,KACd3B,OAAQyC,EAAQzC,QAElBgE,EAAW7H,KAAK+H,IARE,8BAUpB,EAAK1E,SAAS,CACZhF,KAAMwJ,KApES,EAwEnBG,OAAS,SAACxB,EAAKzG,GACbA,EAAEkI,iBACF,EAAK5E,SAAS,CACZmD,IAAKA,IAEP,EAAK0B,aA7EY,EA+FnBA,UAAY,SAAAnI,GACV,EAAKsD,SAAS,CACZlE,SAAS,KAjGM,EAoGnBgJ,SAAW,SAAApI,GACT9B,EAAI,cAAgB,EAAKwF,MAAMS,WAAa,IAAM,EAAKT,MAAM+C,KAAK/E,MAChE,SAAAC,GACE,IAAMC,EAAWD,EAAIrD,KACrBkD,QAAQC,IAAIG,GACa,GAArBA,EAASyG,UACX,EAAKvF,eAIX,EAAKQ,SAAS,CACZlE,SAAS,KA/GM,EAkHnBkJ,aAAe,SAAAtI,GACb,EAAKsD,SAAS,CACZlE,SAAS,KAlHX,EAAKsE,MAAQ,CACXS,gBAAYC,EACZb,YAAa,GACbQ,aAAc,GACdzF,KAAM,GACNmG,MAAO,IACPC,OAAQ,IACR6D,QAAS,CACPC,OAAQ,CAAC,IAAK,GAAI,IAAK,KAEzBC,eAAWrE,EACXhF,aAASgF,EACTqC,SAAKrC,GAdU,E,gEAmBjB,IAAM9C,EAAOW,KAAK6C,MAAMhD,aAAaC,QAAQ,SACvCgD,EAAUzD,EAAK5C,IACrBsG,KAAK1B,SAAS,CACZa,WAAYY,IAEdC,KAAK3B,UAAU/B,EAAK5C,O,kCAwDpB,IAAIyD,EAAc,EACZC,EAAQC,IAAMC,QAAQ,CAC1BxC,MAAO,cACPyC,QAAQ,kDAEJC,EAAQC,aAAY,WACxBN,GAAe,IACd,KACHQ,YAAW,WACTC,cAAcJ,GACdJ,EAAMS,UACNvD,EAAQW,KAAK,WACE,IAAdkC,K,+BA4BK,IAAD,OACP,OACE,yBAAKvC,UAAU,QACb,kBAAC,IAAD,CACEE,MAAM,UACNV,QAAS4F,KAAKtB,MAAMtE,QACpBW,KAAMiF,KAAKoD,SACXlI,SAAU8E,KAAKsD,cAEf,sEAEF,kBAAC,EAAD,MAEA,yBAAK1I,UAAU,wBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAO8I,WAAY1D,KAAKtB,MAAMK,cAC5B,kBAACyD,EAAD,CAAQ1H,MAAM,OAAO6I,UAAU,OAAOlC,IAAI,SAC1C,kBAACe,EAAD,CAAQ1H,MAAM,QAAQ6I,UAAU,QAAQlC,IAAI,UAC5C,kBAACe,EAAD,CAAQ1H,MAAM,SAAS6I,UAAU,SAASlC,IAAI,WAC9C,kBAACe,EAAD,CACErC,MAAM,SACNrF,MAAM,OACN6I,UAAU,OACVlC,IAAI,SAEN,kBAACe,EAAD,CACE1H,MAAM,SACN2G,IAAI,SACJ5B,OAAQ,SAACL,EAAMoE,GAAP,OACN,kBAAC,IAAD,CAAOrB,KAAK,UACV,kBAAC,IAAD,CACEvG,KAAK,UACLsG,MAAM,QACNjG,QAAS,SAAArB,GACP,EAAKiI,OAAOW,EAAOnD,KAAMzF,KAJ7B,iBAeZ,yBAAKJ,UAAU,SACb,kBAACoH,EAAD,CACE1I,KAAM0G,KAAKtB,MAAMpF,KACjBmG,MAAOO,KAAKtB,MAAMe,MAClBC,OAAQM,KAAKtB,MAAMgB,OACnB6D,QAASvD,KAAKtB,MAAM6E,kB,GA7KRlD,a,6CCoPbwD,E,kDAjQb,WAAYrK,GAAQ,IAAD,8BACjB,cAAMA,IAkBR6E,UAAY,SAAA/B,GACVpD,EAAI,eAAiBoD,GAAMI,MAAK,SAAAC,GAC9B,EAAK2B,SAAS,CACZC,YAAa5B,EAAIrD,OAEnB,EAAKwK,6BAxBU,EA4BnBA,uBAAyB,WACvB,IAAMlB,EAAU,GACVnE,EAAM,EAAKC,MAAMH,YACvB/B,QAAQC,IAAIgC,GACZ,IAAME,EAAUF,EAAIG,UACpB,GAAID,EAAQkD,OAAS,GAAI,CACvB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIC,EAAOpD,EAAQmD,GACnBc,EAAQ3H,KAAK8G,GAEf,EAAKzD,SAAS,CACZS,aAAc6D,SAGhB,EAAKtE,SAAS,CACZS,aAAcJ,IAGlB,EAAKoF,iBA9CY,EAiDnBA,cAAgB,WACd,IADoB,EAChBC,EAAiB,EACjBC,EAAiB,EACjBC,EAAmB,EACnBC,EAAkB,EAClBC,EAAkB,EALF,cAOJ,EAAK1F,MAAMK,cAPP,IAOpB,2BAAyC,CACvC,OADuC,QAC3ByB,MACV,IAAK,WACHwD,IAEF,IAAK,SACHC,IAEF,IAAK,WACHC,IAEF,IAAK,gBACHC,IAEF,IAAK,YACHC,MAtBc,8BAsClB,IAAMC,EAAU,CACd,CAAC,OAAQ,UACT,CAAC,WAAYL,GACb,CAAC,SAAUC,GACX,CAAC,WAAYC,GACb,CAAC,gBAAWC,GACZ,CAAC,YAAaC,IAGhB,EAAK9F,SAAS,CACZhF,KAAM+K,IAER7H,QAAQC,IAAI,EAAKiC,MAAMpF,OAnGR,EAsGjBgL,qBAAuB,SAAAX,GAAS,MAAK,CACnCY,eAAgB,gBACdC,EADc,EACdA,gBACAC,EAFc,EAEdA,aACAC,EAHc,EAGdA,QACAC,EAJc,EAIdA,aAJc,OAMd,yBAAKjE,MAAO,CAAEkE,QAAS,IACrB,kBAAC,IAAD,CACEC,IAAK,SAAAC,GACH,EAAKC,YAAcD,GAErBE,YAAW,iBAAYrB,GACvBjI,MAAO+I,EAAa,GACpB5I,SAAU,SAAAb,GAAC,OACTwJ,EAAgBxJ,EAAEc,OAAOJ,MAAQ,CAACV,EAAEc,OAAOJ,OAAS,KAEtDuJ,aAAc,kBACZ,EAAKC,aAAaT,EAAcC,EAASf,IAE3CjD,MAAO,CAAEjB,MAAO,IAAK0F,aAAc,EAAGC,QAAS,WAEjD,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEpJ,KAAK,UACLK,QAAS,kBAAM,EAAK6I,aAAaT,EAAcC,EAASf,IACxD0B,KAAM,kBAACC,EAAA,EAAD,MACN/C,KAAK,QACL7B,MAAO,CAAEjB,MAAO,KALlB,UASA,kBAAC,IAAD,CACEpD,QAAS,kBAAM,EAAKkJ,YAAYZ,IAChCpC,KAAK,QACL7B,MAAO,CAAEjB,MAAO,KAHlB,YAUN+F,WAAY,SAAAC,GAAQ,OAClB,kBAACH,EAAA,EAAD,CAAgB5E,MAAO,CAAEf,MAAO8F,EAAW,eAAYrG,MAEzDsG,SAAU,SAAChK,EAAOkI,GAAR,OACRA,EAAOD,GACHC,EAAOD,GACNgC,WACAC,cACAC,SAASnK,EAAMkK,eAChB,IACNE,8BAA+B,SAAA1L,GACzBA,GACFuD,YAAW,kBAAM,EAAKoH,YAAYgB,aAGtClG,OAAQ,SAAAL,GAAI,OACV,EAAKd,MAAMsH,iBAAmBrC,EAC5B,kBAAC,IAAD,CACEsC,eAAgB,CAAEtF,gBAAiB,UAAWiE,QAAS,GACvDsB,YAAa,CAAC,EAAKxH,MAAMyH,YACzBC,YAAU,EACVC,gBAAiB7G,EAAOA,EAAKmG,WAAa,KAG5CnG,KAxKW,EA4KjB0F,aAAe,SAACT,EAAcC,EAASf,GACrCe,IACA,EAAKpG,SAAS,CACZ6H,WAAY1B,EAAa,GACzBuB,eAAgBrC,KAhLH,EAoLjB4B,YAAc,SAAAZ,GACZA,IACA,EAAKrG,SAAS,CAAE6H,WAAY,MApL9B,EAAKzH,MAAQ,CACXS,gBAAYC,EACZb,YAAa,GACbQ,aAAc,GACdzF,KAAM,IANS,E,gEAWjB,IAAMgD,EAAOW,KAAK6C,MAAMhD,aAAaC,QAAQ,SACvCgD,EAAUzD,EAAK5C,IACrBsG,KAAK1B,SAAS,CACZa,WAAYY,IAEdC,KAAK3B,UAAU/B,EAAK5C,O,+BA0KlB,IAAM4M,EAAU,kBAACrE,EAAA,EAAD,CAAiBvB,MAAO,CAAE6F,SAAU,IAAMC,MAAI,IACxDC,EAAU,CAAC,aAEb3L,MAAO,OACP6I,UAAW,OACXlC,IAAK,OACLhC,MAAO,OACJO,KAAKsE,qBAAqB,SANjB,aASZxJ,MAAO,QACP6I,UAAW,QACXlC,IAAK,QACLhC,MAAO,OACJO,KAAKsE,qBAAqB,UAbjB,aAgBZxJ,MAAO,SACP6I,UAAW,SACXlC,IAAK,UACFzB,KAAKsE,qBAAqB,WAnBjB,aAsBZxJ,MAAO,OACP6I,UAAW,OACXlC,IAAK,QACFzB,KAAKsE,qBAAqB,UAGjC,OACE,yBAAK1J,UAAU,QACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CACE6L,QAASA,EACTC,aAAc,SAAC9C,EAAQpC,GAAT,MACG,UAAfoC,EAAOpD,KACH,mBACmC,YAAfoD,EAAOpD,KACzB,oBACmC,YAAfoD,EAAOpD,KACzB,qBACmC,iBAAfoD,EAAOpD,KACzB,oBACmC,aAAfoD,EAAOpD,KACzB,oBACA,kBAEdkD,WAAY1D,KAAKtB,MAAMK,gBAG3B,kBAAC,IAAD,CACEnE,UAAU,MACV6E,MAAO,QACPC,OAAQ,QACRiH,UAAU,WACVC,OAAQ,kBAAC,IAAD,CAAMC,UAAWP,IACzBhN,KAAM0G,KAAKtB,MAAMpF,KACjBwN,QAAS,CACPhM,MAAO,4CAETiM,UAAW,CAAE,cAAe,c,GA1PjB1G,a,kBC8GZ2G,EA3GG,WAAO,IAAD,EACoBvN,mBAAS,WAD7B,mBACfwN,EADe,KACAC,EADA,OAEEzN,qBAFF,mBAEfgH,EAFe,KAET0G,EAFS,OAGI1N,qBAHJ,mBAGfS,EAHe,KAGRC,EAHQ,OAIQV,qBAJR,gCAKUA,sBALV,mBAKf2N,EALe,KAKLC,EALK,OAMc5N,qBANd,mBAMf0F,EANe,KAMHmI,EANG,OAQE7N,oBAAS,GARX,mBAQf8N,EARe,UActBC,qBAAU,WACRtO,EAAI,SAASwD,MAAK,SAAAC,GAChB0K,EAAY1K,EAAIrD,SAElB,IACMyG,EADO9C,KAAK6C,MAAMhD,aAAaC,QAAQ,SACxBrD,IACrB4N,EAAcvH,KACb,CAACwH,IAyCJ,OACE,yBAAK3M,UAAU,QACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,yBACb,kBAAC,IAAD,CACEH,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERF,OAAO,aACPiN,cAAe,CACblF,KAAM0E,GAERS,eAnEmB,SAAC,GAAc,IAAZnF,EAAW,EAAXA,KAC5B2E,EAAiB3E,IAmEXA,KAAM0E,GAEN,kBAAC,IAAKxL,KAAN,CAAWE,MAAM,oBAAoBR,KAAK,QACxC,kBAAC,UAAMwM,MAAP,KACE,kBAAC,UAAMC,OAAP,CAAclM,MAAM,SAApB,SACA,kBAAC,UAAMkM,OAAP,CAAclM,MAAM,WAApB,WACA,kBAAC,UAAMkM,OAAP,CAAclM,MAAM,SAApB,WAGJ,kBAAC,IAAKD,KAAN,CAAWN,KAAK,QAAQQ,MAAM,SAC5B,kBAAC,IAAD,CAAOE,SAAU,SAAAb,GAAC,OAAIb,EAASa,EAAEc,OAAOJ,WAE1C,kBAAC,IAAKD,KAAN,CAAWE,MAAM,gBACf,kBAAC,IAAD,CACER,KAAK,OACL0M,SAAUpH,EACV5E,SAAU,SAAA4E,GAAI,OAAI0G,EAAQ1G,OAG9B,kBAAC,IAAKhF,KAAN,CAAWE,MAAM,cACf,kBAAC,IAAD,CAAQK,KAAK,UAAUI,SAAS,SAASC,QA7DpC,WACb,IAAIyL,EADe,gBAEDV,GAFC,IAEnB,2BAA4B,CAAC,IAApBW,EAAmB,QAE1B,GADAvL,QAAQC,IAAIsL,GACRA,EAAMrO,KAAOyF,EAAY,CAE3B,IAAM7C,EAAO,CACX5C,KAFFoO,EAAaC,GAEKrO,IAChB6C,IAAKuL,EAAWvL,IAChBkE,KAAMA,EACNvG,MAAOA,GAGTb,EAAK,OAAQiD,GAAMI,MAAK,SAAAC,GAGF,oBAFHA,EAAIrD,KAERuD,IA7BnBQ,IAAMC,QAAQ,CACZxC,MAAO,eACPyC,QACE,6BACE,0EAGJxC,KAPY,WAQVT,EAAQW,KAAK,YAwBT+M,MAAM,WAnBK,iCA6DX,mBCxGCC,EAAb,kDACE,WAAYzO,GAAQ,IAAD,8BACjB,cAAMA,IACD0O,KAAO,GAFK,EADrB,qDAOI,OACE,kBAAC,IAAD,CAAQ5N,QAASA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOnB,KAAK,IAAIgP,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOhP,KAAK,SACV,kBAACiP,EAAD,OAEF,kBAAC,IAAD,CAAOjP,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,QACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,aA1BZ,GAA4BkH,aCGRgI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCVNC,IAAS7I,OAEL,kBAAC,EAAD,MAEFP,SAASC,eAAe,SDuHpB,kBAAmBoJ,WACrBA,UAAUC,cAAcC,MACrBnM,MAAK,SAAAoM,GACJA,EAAaC,gBAEdC,OAAM,SAAA9K,GACL1B,QAAQ0B,MAAMA,EAAM+K,a","file":"static/js/main.da4cfccd.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst url = \"http://localhost:3001/\";\r\n\r\nexport const get = path => {\r\n  return axios.get(url + path);\r\n};\r\n\r\nexport const post = (path, data) => {\r\n  return axios.post(url + path, data);\r\n};\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, InputNumber, Button } from \"antd\";\r\nimport { LocalService } from \"../services/LocalService\";\r\nimport { post } from \"../services/ApiService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Modal } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Creation = props => {\r\n  const [nom, setNom] = useState();\r\n  const [password, setWord] = useState();\r\n  const [age, setAge] = useState();\r\n  const [taille, setTaille] = useState();\r\n  const [poids, setPoids] = useState();\r\n  const [visible, setVisible] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const validateMessages = {\r\n    required: \"${label} is required!\",\r\n    types: {\r\n      number: \"${label} is not a validate number!\"\r\n    },\r\n    number: {\r\n      range: \"${label} doit être entre ${min} and ${max}\"\r\n    }\r\n  };\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = e => {\r\n    history.push(\"/Home\");\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = e => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const submit = () => {\r\n    const user = {\r\n      nom: nom,\r\n      mdp: password,\r\n      age: age,\r\n      poids: poids,\r\n      taille: taille\r\n    };\r\n    console.log(user);\r\n    post(\"creation\", user).then(res => {\r\n      const response = res.data;\r\n      console.log(response);\r\n      if (response.msg == \"user created\") {\r\n        showModal();\r\n        if (localStorage.getItem(\"user\") == null) {\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n        }\r\n      } else {\r\n        countDown();\r\n      }\r\n    });\r\n  };\r\n\r\n  function countDown() {\r\n    let secondsToGo = 5;\r\n    const modal = Modal.success({\r\n      title: \"Redirection \",\r\n      content: `Votre profil existe déjà`\r\n    });\r\n    const timer = setInterval(() => {\r\n      secondsToGo -= 1;\r\n      modal.update({\r\n        content: `Vous allez être redirigé vers la page de connexion dans ${secondsToGo} second.`\r\n      });\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      modal.destroy();\r\n      history.push(\"\");\r\n    }, secondsToGo * 1000);\r\n  }\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8\r\n    },\r\n    wrapperCol: {\r\n      span: 16\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\" id=\"creation\">\r\n      <Modal\r\n        title=\"Message\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <p>Votre profil a bien été validé</p>\r\n      </Modal>\r\n\r\n      <h1>Inscription</h1>\r\n      <Form\r\n        {...layout}\r\n        name=\"nest-messages\"\r\n        validateMessages={validateMessages}\r\n      >\r\n        <Form.Item\r\n          name=\"nom\"\r\n          value={nom}\r\n          label=\"Name\"\r\n          rules={[\r\n            {\r\n              required: true\r\n            }\r\n          ]}\r\n          onChange={e => setNom(e.target.value)}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"pasword\"\r\n          label=\"Password\"\r\n          rules={[\r\n            {\r\n              required: true\r\n            }\r\n          ]}\r\n          onChange={e => setWord(e.target.value)}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"age\"\r\n          label=\"Age\"\r\n          rules={[\r\n            {\r\n              type: \"number\",\r\n              required: true,\r\n              min: 0,\r\n              max: 99\r\n            }\r\n          ]}\r\n          onChange={e => setAge(e.target.value)}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"taille\"\r\n          label=\"Taille\"\r\n          rules={[\r\n            {\r\n              type: \"number\",\r\n              required: true\r\n            }\r\n          ]}\r\n          onChange={e => setTaille(e.target.value)}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"poids\"\r\n          label=\"Poids\"\r\n          rules={[\r\n            {\r\n              type: \"number\",\r\n              required: true\r\n            }\r\n          ]}\r\n          onChange={e => setPoids(e.target.value)}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\" onClick={submit}>\r\n            Validation\r\n          </Button>\r\n          &nbsp; &nbsp; &nbsp;\r\n          <span className=\"textCompte\">\r\n            Si vous disposez déjà d'un compte. &nbsp; &nbsp;\r\n            <Link to=\"/\">Connexion</Link>\r\n          </span>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default Creation;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../index.css\";\r\nimport { post } from \"../services/ApiService\";\r\nimport { LocalService } from \"../services/LocalService\";\r\nimport { Modal } from \"antd\";\r\n\r\nconst Identification = props => {\r\n  const [nom, setNom] = useState();\r\n  const [password, setWord] = useState();\r\n  const [visible, setVisible] = useState();\r\n  const history = useHistory();\r\n\r\n  const validateMessages = {\r\n    required: \"${label} is required!\",\r\n    types: {\r\n      email: \"${label} is not validate email!\",\r\n      number: \"${label} is not a validate number!\"\r\n    },\r\n    number: {\r\n      range: \"${label} must be between ${min} and ${max}\"\r\n    }\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8\r\n    },\r\n    wrapperCol: {\r\n      span: 16\r\n    }\r\n  };\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = e => {\r\n    history.push(\"/Home\");\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = e => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const submit = () => {\r\n    const user = {\r\n      nom: nom,\r\n      mdp: password\r\n    };\r\n\r\n    post(\"identification\", user).then(res => {\r\n      const response = res.data;\r\n\r\n      if (response.msg === \"connexion valide\") {\r\n        if(localStorage.getItem(\"user\") === null){\r\n          console.log(user)\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n        }\r\n        showModal();\r\n      } else if (response.msg === \"identifiant non trouvé\") {\r\n        countDown();\r\n      } else if (response.msg === \"erreur mdp\") {\r\n        countDown2();\r\n      }\r\n    });\r\n  };\r\n  function countDown() {\r\n    let secondsToGo = 5;\r\n    const modal = Modal.error({\r\n      title: \"Erreur\",\r\n      content: `L'identifiant est introuvable`\r\n    });\r\n    const timer = setInterval(() => {\r\n      secondsToGo -= 1;\r\n      modal.update({\r\n        content: `Erreur de saisie ou vous n'êtes pas encore inscrit.\r\n        ${secondsToGo} second.`\r\n      });\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      modal.destroy();\r\n      history.push(\"\");\r\n    }, secondsToGo * 1000);\r\n  }\r\n  function countDown2() {\r\n    let secondsToGo = 5;\r\n    const modal = Modal.error({\r\n      title: \"Erreur\",\r\n      content: `Le mot de passe est incorrect`\r\n    });\r\n    const timer = setInterval(() => {\r\n      secondsToGo -= 1;\r\n      modal.update({\r\n        content: `Veuillez le saisir à nouveau.\r\n        ${secondsToGo} second.`\r\n      });\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      modal.destroy();\r\n      history.push(\"\");\r\n    }, secondsToGo * 1000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container identification\">\r\n      <h1>Identification</h1>\r\n      <Modal\r\n        title=\"Message\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <p>Identification reussie</p>\r\n      </Modal>\r\n\r\n      <Form {...layout} validateMessages={validateMessages}>\r\n        <Form.Item\r\n          name=\"nom\"\r\n          label=\"Name\"\r\n          rules={[\r\n            {\r\n              required: true\r\n            }\r\n          ]}\r\n          onChange={e => setNom(e.target.value)}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[\r\n            {\r\n              required: true\r\n            }\r\n          ]}\r\n          onChange={e => setWord(e.target.value)}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\" onClick={submit}>\r\n            Validation\r\n          </Button>\r\n          &nbsp; &nbsp; &nbsp;\r\n          <span className=\"textCompte\">\r\n            Si vous ne disposez pas de compte? &nbsp; &nbsp;\r\n            <Link to=\"Creation\">Inscription</Link>\r\n          </span>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default Identification;\r\n","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\nimport { Button } from \"antd\";\r\nimport history from \"../history\";\r\nimport { LocalService } from \"../services/LocalService\";\r\nimport { get } from \"../services/ApiService\";\r\nimport { Modal } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Gauge } from \"@antv/g2plot\";\r\n\r\nclass Navside extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userActuel: undefined,\r\n      indiceActuel: undefined\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"user\") != null) {\r\n      console.log(localStorage.getItem(\"user\"))\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      const userNom = user.nom;\r\n      this.setState({\r\n        userActuel: userNom,\r\n      });\r\n      this.appelList(user.nom);\r\n    }  \r\n  }\r\n\r\n  appelList = user => {\r\n    get(\"listImcUser/\" + user).then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        listImcBrut: res.data\r\n      });\r\n      this.modificationTableauSemaine();\r\n    });\r\n  };\r\n\r\n  modificationTableauSemaine = () => {\r\n    const tab = this.state.listImcBrut;\r\n    console.log(tab);\r\n    const tableau = tab.reverse();\r\n    let element = tableau[0];\r\n    let indiceActuel = element.indice;\r\n    this.setState({\r\n      listImcFinal: tableau,\r\n      indiceActuel: indiceActuel\r\n    });\r\n    this.creationJauge();\r\n  };\r\n\r\n  form = () => {\r\n    history.push(\"/Form\");\r\n  };\r\n\r\n  deconnexion = () => {\r\n    this.setState({\r\n      userActuel: undefined\r\n    });\r\n    this.countDown();\r\n  };\r\n\r\n  countDown() {\r\n    let secondsToGo = 3;\r\n    const modal = Modal.error({\r\n      title: \"Deconnexion\",\r\n      content: `Vous allez etre deconnecté`\r\n    });\r\n    const timer = setInterval(() => {\r\n      secondsToGo -= 1;\r\n      modal.update({\r\n        content: `Deconnexion dans\r\n        ${secondsToGo} seconds.`\r\n      });\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      modal.destroy();\r\n      history.push(\"/\");\r\n    }, secondsToGo * 1000);\r\n  }\r\n\r\n\r\n  creationJauge = () => {\r\n    const gaugePlot = new Gauge(document.getElementById(\"container\"), {\r\n      title: {\r\n        visible: true,\r\n        text: \"IMC actuel\"\r\n      },\r\n      width: 200,\r\n      height: 200,\r\n      value: this.state.indiceActuel,\r\n      min: 0,\r\n      max: 60,\r\n      range: [0, 18, 25, 30, 40, 60],\r\n      color: [\"#85C1E9\", \"#82E0AA\", \"#F0B27A\", \"#E74C3C\", \"#273746\"],\r\n      statistic: {\r\n        visible: true,\r\n        text: \"imc\",\r\n        color: \"#30bf78\"\r\n      }\r\n    });\r\n    gaugePlot.render();\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        imcs={this.props.listImcCal}\r\n        className=\"col-2 container navside\"\r\n        id=\"navside\"\r\n      >\r\n        <h1 class=\"row mb-10 mt-10\">React Imc</h1>\r\n        <div class=\"card mb-10\" id=\"cardu\">\r\n          <div class=\"card-body\">{this.state.userActuel}</div>\r\n        </div>\r\n        <div >\r\n        </div>\r\n        <div class=\"tab\">\r\n          <h6 class=\"row mb-3 pl-2\">Periode des saisies</h6>\r\n          <div class=\"col mb-10\">\r\n            <Link to=\"/Home\">\r\n              <li>\r\n                <i class=\"fa fa-calendar-check-o mr-2\" aria-hidden=\"true\"></i>\r\n                Semaine\r\n              </li>\r\n            </Link>\r\n            <Link to=\"/Mois\">\r\n              <li>\r\n                <i class=\"fa fa-calendar mr-2\" aria-hidden=\"true\"></i> Mois\r\n              </li>\r\n            </Link>\r\n            <Link to=\"/Tri\">\r\n              <li>\r\n                <i class=\"fa fa-calendar-plus-o mr-2\" aria-hidden=\"true\"></i>\r\n                Trimestre\r\n              </li>\r\n            </Link>\r\n          </div>\r\n          <div class=\"but\">\r\n            <Button class=\"boutonPoids\" type=\"primary\" onClick={this.form}>\r\n              Saisir son poids\r\n            </Button>\r\n            <Button\r\n              class=\"boutonPoids\"\r\n              type=\"primary\"\r\n              onClick={this.deconnexion}\r\n            >\r\n              Deconnexion\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div id=\"container\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Navside;\r\n","import React, { Component } from \"react\";\r\nimport \"../../index.css\";\r\nimport \"./Imc.css\";\r\n\r\nclass Imc extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: undefined\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.imc.etat)\r\n    let color;\r\n    if (this.props.imc.etat == \"Maigreur\") {\r\n      color = \"grey\";\r\n    } else if (this.props.imc.etat == \"Normal\") {\r\n      color = \"green\";\r\n    } else if (this.props.imc.etat == \"Surpoids\") {\r\n      color = \"orange\";\r\n    } else if (this.props.imc.etat == \"Obésité\") {\r\n      color = \"Red\";\r\n    } else if (this.props.imc.etat == \"O.Morbide\") {\r\n      color = \"black\";\r\n    }\r\n    this.setState({\r\n      color: color\r\n    });\r\n  }\r\n\r\n  render() {\r\n  console.log(this.props.imc.nom)\r\n\r\n    return (\r\n      <div class=\"card user-card\" id=\"card-bloc\">\r\n        <div class=\"card-header\">\r\n          <span>Indice</span>\r\n          <div className=\"indice\">{this.props.imc.indice}</div>\r\n        </div>\r\n        <div class=\"card-block\">\r\n          <h6 class=\"f-w-600 m-t-25 m-b-10\">{this.props.imc.date}</h6>\r\n          <div>\r\n            <ul class=\"list-unstyled activity-leval\" >\r\n              <li \r\n                class={this.props.imc.taille.taille}\r\n                style={{\r\n                  backgroundColor: (this.props.imc.taille.taille == \"active\"\r\n                    ? this.state.color\r\n                    : \"white\")\r\n                }}\r\n              ></li>\r\n              <li \r\n                class={this.props.imc.taille.taille1}\r\n                style={{\r\n                  backgroundColor: (this.props.imc.taille.taille1 == \"active\"\r\n                    ? this.state.color\r\n                    : \"white\")\r\n                }}\r\n              ></li>\r\n              <li\r\n                class={this.props.imc.taille.taille2}\r\n                style={{\r\n                  backgroundColor: (this.props.imc.taille.taille2 == \"active\"\r\n                    ? this.state.color\r\n                    : \"white\")\r\n                }}\r\n              ></li>\r\n              <li\r\n                class={this.props.imc.taille.taille3}\r\n                style={{\r\n                  backgroundColor: (this.props.imc.taille.taille3 == \"active\"\r\n                    ? this.state.color\r\n                    : \"white\")\r\n                }}\r\n              ></li>\r\n              <li\r\n                class={this.props.imc.taille.taille4}\r\n                style={{\r\n                  backgroundColor: (this.props.imc.taille.taille4 == \"active\"\r\n                    ? this.state.color\r\n                    : \"white\")\r\n                }}\r\n              ></li>\r\n            </ul>\r\n            <div class={this.props.imc.color}>\r\n              <div class=\"row m-0 bloc\" counter-block m-t-10 p-15 >\r\n                <div class=\"col-4 p-0\" id=\"bloc1\">\r\n                  <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                  <div >{this.props.imc.poids}</div>\r\n                </div>\r\n                <div class=\"col-4 p-0\" id=\"bloc2\">\r\n                  <i class=\"fa fa-check-square-o\" aria-hidden=\"true\"></i>\r\n                  <div className=\"etat\">{this.props.imc.etat}</div>\r\n                </div>\r\n                <div class=\"col-4 p-0\" id=\"bloc3\">\r\n                  <i class=\"fa fa-bar-chart\" aria-hidden=\"true\"></i>\r\n                  <div>{this.props.imc.effort}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p class=\"m-t-15 text-muted\">{this.props.imc.description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Imc;\r\n\r\n\r\n","import Imc from \"../Imc/Imc\";\r\nimport React, {Component} from \"react\";\r\n\r\nclass Imcs extends Component{\r\nconstructor(props){\r\n  super (props) \r\nthis.state = {}\r\n}\r\n\r\nrender (){\r\n  return (\r\n    <div className=\"row\" id=\"listImc\">\r\n      {this.props.imc.map((element, index) => (\r\n          <Imc imc={element} key={index}></Imc>\r\n        ))}\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n}\r\nexport default Imcs;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport Imcs from \"../Components/Imcs/Imcs\";\r\nimport \"../index.css\";\r\n\r\n\r\nclass Affichage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-10 affichage\">\r\n          <Imcs imc={this.props.listImcCal} ></Imcs>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Affichage;","import React, { Component, useReducer } from \"react\";\r\nimport NavSide from \"../Components/Navside\";\r\nimport Affichage from \"../Containers/Affichage\";\r\nimport \"../index.css\"\r\nimport { LocalService } from \"../services/LocalService\";\r\nimport { get } from \"../services/ApiService\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userActuel: undefined,\r\n      listImcBrut: [],\r\n      listImcFinal: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const userNom = user.nom;\r\n    this.setState({\r\n      userActuel: userNom\r\n    });\r\n    this.appelList(user.nom);\r\n  }\r\n\r\n  appelList = user => {\r\n    get(\"listImcUser/\" + user).then(res => {\r\n      this.setState({\r\n        listImcBrut: res.data\r\n      });\r\n      this.modificationTableauSemaine();\r\n    });\r\n  };\r\n\r\n  modificationTableauSemaine = () => {\r\n    const tabSem = [];\r\n    const tab = this.state.listImcBrut;\r\n    console.log(tab);\r\n    const tableau = tab.reverse();\r\n    if (tableau.length > 6) {\r\n      for (let i = 0; i < 7; i++) {\r\n        let jour = tableau[i];\r\n        tabSem.push(jour);\r\n      }\r\n      this.setState({\r\n        listImcFinal: tabSem\r\n      });\r\n    } else {\r\n      this.setState({\r\n        listImcFinal: tableau\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid home\">\r\n        <NavSide className=\"col-3\"></NavSide>\r\n        <Affichage\r\n          className=\"col-9\"\r\n          listImcCal={this.state.listImcFinal}\r\n        ></Affichage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Space, Button } from \"antd\";\r\nimport \"../index.css\";\r\nimport { LocalService } from \"../services/LocalService\";\r\nimport { get } from \"../services/ApiService\";\r\nimport NavSide from \"../Components/Navside\";\r\nimport createG2 from \"g2-react\";\r\nimport { Modal } from \"antd\";\r\nimport history from \"../history\";\r\n\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\nconst Line = createG2(chart => {\r\n  chart\r\n    .line()\r\n    .position(\"date*indice\")\r\n    .color(\"#4FAAEB\")\r\n    .shape(\"circle\")\r\n    .size(2);\r\n  chart.render();\r\n});\r\nconst { Column } = Table;\r\n\r\nclass AffichageMois extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userActuel: undefined,\r\n      listImcBrut: [],\r\n      listImcFinal: [],\r\n      data: [],\r\n      width: 500,\r\n      height: 600,\r\n      plotCfg: {\r\n        margin: [100, 80, 100, 70]\r\n      },\r\n      etatColor: undefined,\r\n      visible: undefined,\r\n      key: undefined\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const userNom = user.nom;\r\n    this.setState({\r\n      userActuel: userNom\r\n    });\r\n    this.appelList(user.nom);\r\n  }\r\n\r\n  appelList = user => {\r\n    get(\"listImcUser/\" + user).then(res => {\r\n      this.setState({\r\n        listImcBrut: res.data\r\n      });\r\n      this.modificationTableauMois();\r\n    });\r\n  };\r\n\r\n  modificationTableauMois = () => {\r\n    const tabMois = [];\r\n    const tab = this.state.listImcBrut;\r\n    console.log(tab);\r\n    const tableau = tab.reverse();\r\n    if (tableau.length > 29) {\r\n      for (let i = 0; i < 30; i++) {\r\n        let jour = tableau[i];\r\n        tabMois.push(jour);\r\n      }\r\n      this.setState({\r\n        listImcFinal: tabMois\r\n      });\r\n    } else {\r\n      this.setState({\r\n        listImcFinal: tableau\r\n      });\r\n    }\r\n    this.creationGraph();\r\n  };\r\n  \r\n  creationGraph = () => {\r\n    let dataIndice = [];\r\n    const inverseTab = this.state.listImcFinal.reverse();\r\n    for (let element of inverseTab) {\r\n      let dataElement = {\r\n        date: element.date,\r\n        indice: element.indice\r\n      };\r\n      dataIndice.push(dataElement);\r\n    }\r\n    this.setState({\r\n      data: dataIndice\r\n    });\r\n  };\r\n\r\n  delete = (key, e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      key: key\r\n    });\r\n    this.showModal();\r\n  };\r\n  countDown() {\r\n    let secondsToGo = 2;\r\n    const modal = Modal.success({\r\n      title: \"Suppression\",\r\n      content: `Votre donnée a bien été supprimée`\r\n    });\r\n    const timer = setInterval(() => {\r\n      secondsToGo -= 1;\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      modal.destroy();\r\n      history.push(\"/Home\");\r\n    }, secondsToGo * 1000);\r\n  }\r\n\r\n  showModal = e => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n  handleOk = e => {\r\n    get(\"delete-imc/\" + this.state.userActuel + \"/\" + this.state.key).then(\r\n      res => {\r\n        const response = res.data;\r\n        console.log(response);\r\n        if (response.isDelete == true) {\r\n          this.countDown();\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  handleCancel = e => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <Modal\r\n          title=\"Message\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <p>Voulez-vous supprimer cette donnée?</p>\r\n        </Modal>\r\n        <NavSide></NavSide>\r\n      \r\n        <div className=\"container-fluid form\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6 mr-10\">\r\n              <div className=\"row m-t-10\">\r\n                <Table dataSource={this.state.listImcFinal}>\r\n                  <Column title=\"Date\" dataIndex=\"date\" key=\"date\" />\r\n                  <Column title=\"Poids\" dataIndex=\"poids\" key=\"poids\" />\r\n                  <Column title=\"Indice\" dataIndex=\"indice\" key=\"indice\" />\r\n                  <Column\r\n                    class=\"orange\"\r\n                    title=\"Etat\"\r\n                    dataIndex=\"etat\"\r\n                    key=\"etat\"\r\n                  />\r\n                  <Column\r\n                    title=\"Action\"\r\n                    key=\"action\"\r\n                    render={(text, record) => (\r\n                      <Space size=\"middle\">\r\n                        <Button\r\n                          type=\"primary\"\r\n                          shape=\"round\"\r\n                          onClick={e => {\r\n                            this.delete(record.date, e);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </Space>\r\n                    )}\r\n                  />\r\n                </Table>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <Line\r\n                data={this.state.data}\r\n                width={this.state.width}\r\n                height={this.state.height}\r\n                plotCfg={this.state.plotCfg}\r\n              ></Line>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AffichageMois;\r\n","import React, { Component } from \"react\";\r\nimport NavSide from \"../Components/Navside\";\r\nimport { LocalService } from \"../services/LocalService\";\r\nimport { get } from \"../services/ApiService\";\r\nimport { Table, Input, Button, Space } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport \"../index.css\";\r\nimport Chart from \"react-google-charts\";\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nclass AffichageTri extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userActuel: undefined,\r\n      listImcBrut: [],\r\n      listImcFinal: [],\r\n      data: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const userNom = user.nom;\r\n    this.setState({\r\n      userActuel: userNom\r\n    });\r\n    this.appelList(user.nom);\r\n  }\r\n\r\n  appelList = user => {\r\n    get(\"listImcUser/\" + user).then(res => {\r\n      this.setState({\r\n        listImcBrut: res.data\r\n      });\r\n      this.modificationTableauTri();\r\n    });\r\n  };\r\n\r\n  modificationTableauTri = () => {\r\n    const tabMois = [];\r\n    const tab = this.state.listImcBrut;\r\n    console.log(tab);\r\n    const tableau = tab.reverse();\r\n    if (tableau.length > 89) {\r\n      for (let i = 0; i < 90; i++) {\r\n        let jour = tableau[i];\r\n        tabMois.push(jour);\r\n      }\r\n      this.setState({\r\n        listImcFinal: tabMois\r\n      });\r\n    } else {\r\n      this.setState({\r\n        listImcFinal: tableau\r\n      });\r\n    }\r\n    this.calculDataPie();\r\n  };\r\n\r\n  calculDataPie = () => {\r\n    let compteurMaigre = 0;\r\n    let compteurNormal = 0;\r\n    let compteurSurpoids = 0;\r\n    let compteurObesite = 0;\r\n    let compteurMorbide = 0;\r\n\r\n    for (let imc of this.state.listImcFinal) {\r\n      switch (imc.etat) {\r\n        case \"Maigreur\": {\r\n          compteurMaigre++;\r\n        }\r\n        case \"Normal\": {\r\n          compteurNormal++;\r\n        }\r\n        case \"Surpoids\": {\r\n          compteurSurpoids++;\r\n        }\r\n        case \"Obésité\": {\r\n          compteurObesite++;\r\n        }\r\n        case \"O.Morbide\": {\r\n          compteurMorbide++;\r\n        }\r\n          // if (imc.etat == \"Maigreur\") {\r\n          //   compteurMaigre++;\r\n          // } else if (imc.etat == \"Normal\") {\r\n          //   compteurNormal++;\r\n          // } else if (imc.etat == \"Surpoids\") {\r\n          //   compteurSurpoids++;\r\n          // } else if (imc.etat == \"Obésité\") {\r\n          //   compteurObesite++;\r\n          // } else if (imc.etat == \"O.Morbide\") {\r\n          //   compteurMorbide++;\r\n          // }\r\n      }\r\n    }\r\n\r\n      const dataPie = [\r\n        [\"Etat\", \"Valeur\"],\r\n        [\"Maigreur\", compteurMaigre],\r\n        [\"Normal\", compteurNormal],\r\n        [\"Surpoids\", compteurSurpoids],\r\n        [\"Obésité\", compteurObesite],\r\n        [\"O.Morbide\", compteurMorbide]\r\n      ];\r\n\r\n      this.setState({\r\n        data: dataPie\r\n      });\r\n      console.log(this.state.data);\r\n    };\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n      filterDropdown: ({\r\n        setSelectedKeys,\r\n        selectedKeys,\r\n        confirm,\r\n        clearFilters\r\n      }) => (\r\n        <div style={{ padding: 8 }}>\r\n          <Input\r\n            ref={node => {\r\n              this.searchInput = node;\r\n            }}\r\n            placeholder={`Search ${dataIndex}`}\r\n            value={selectedKeys[0]}\r\n            onChange={e =>\r\n              setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n            }\r\n            onPressEnter={() =>\r\n              this.handleSearch(selectedKeys, confirm, dataIndex)\r\n            }\r\n            style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n          />\r\n          <Space>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n              icon={<SearchOutlined />}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button\r\n              onClick={() => this.handleReset(clearFilters)}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Space>\r\n        </div>\r\n      ),\r\n      filterIcon: filtered => (\r\n        <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n      ),\r\n      onFilter: (value, record) =>\r\n        record[dataIndex]\r\n          ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n          : \"\",\r\n      onFilterDropdownVisibleChange: visible => {\r\n        if (visible) {\r\n          setTimeout(() => this.searchInput.select());\r\n        }\r\n      },\r\n      render: text =>\r\n        this.state.searchedColumn === dataIndex ? (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n            searchWords={[this.state.searchText]}\r\n            autoEscape\r\n            textToHighlight={text ? text.toString() : \"\"}\r\n          />\r\n        ) : (\r\n          text\r\n        )\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n      confirm();\r\n      this.setState({\r\n        searchText: selectedKeys[0],\r\n        searchedColumn: dataIndex\r\n      });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n      clearFilters();\r\n      this.setState({ searchText: \"\" });\r\n    };\r\n\r\n    render() {\r\n      const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n      const columns = [\r\n        {\r\n          title: \"Date\",\r\n          dataIndex: \"date\",\r\n          key: \"date\",\r\n          width: \"30%\",\r\n          ...this.getColumnSearchProps(\"date\")\r\n        },\r\n        {\r\n          title: \"Poids\",\r\n          dataIndex: \"poids\",\r\n          key: \"poids\",\r\n          width: \"20%\",\r\n          ...this.getColumnSearchProps(\"poids\")\r\n        },\r\n        {\r\n          title: \"Indice\",\r\n          dataIndex: \"indice\",\r\n          key: \"indice\",\r\n          ...this.getColumnSearchProps(\"indice\")\r\n        },\r\n        {\r\n          title: \"Etat\",\r\n          dataIndex: \"etat\",\r\n          key: \"etat\",\r\n          ...this.getColumnSearchProps(\"etat\")\r\n        }\r\n      ];\r\n      return (\r\n        <div className=\"home\">\r\n          <NavSide></NavSide>\r\n          <div className=\"container-fluid form\">\r\n            <div className=\"row m-t-25\">\r\n              <div className=\"col-6 mr-10\">\r\n                <Table\r\n                  columns={columns}\r\n                  rowClassName={(record, index) =>\r\n                    record.etat == \"Normal\"\r\n                      ? \"table-row-normal\"\r\n                      : \"table-row-dark\" && record.etat == \"Surpoids\"\r\n                        ? \"table-row-surpoid\"\r\n                        : \"table-row-dark\" && record.etat == \"Maigreur\"\r\n                          ? \"table-row-maigreur\"\r\n                          : \"table-row-dark\" && record.etat == \"Obésité\"\r\n                            ? \"table-row-obesite\"\r\n                            : \"table-row-dark\" && record.etat == \"O.Morbide\"\r\n                              ? \"table-row-morbide\"\r\n                              : \"table-row-dark\"\r\n                  }\r\n                  dataSource={this.state.listImcFinal}\r\n                />\r\n              </div>\r\n              <Chart\r\n                className=\"ml4\"\r\n                width={\"500px\"}\r\n                height={\"300px\"}\r\n                chartType=\"PieChart\"\r\n                loader={<Spin indicator={antIcon} />}\r\n                data={this.state.data}\r\n                options={{\r\n                  title: \"Repartition en durée IMC sur 90 jours\"\r\n                }}\r\n                rootProps={{ \"data-testid\": \"1\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\nexport default AffichageTri;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { get } from \"../services/ApiService\";\r\nimport { post } from \"../services/ApiService\";\r\nimport { LocalService } from \"../services/LocalService\";\r\nimport { Modal } from \"antd\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport Navside from \"../Components/Navside\";\r\nimport history from \"../history\";\r\n\r\nconst Formpoids = () => {\r\n  const [componentSize, setComponentSize] = useState(\"default\");\r\n  const [date, setDate] = useState();\r\n  const [poids, setPoids] = useState();\r\n  const [visible, setVisible] = useState();\r\n  const [listUser, setListuser] = useState();\r\n  const [userActuel, setUserActuel] = useState();\r\n\r\n  const [load, setLoad] = useState(true);\r\n\r\n  const onFormLayoutChange = ({ size }) => {\r\n    setComponentSize(size);\r\n  };\r\n\r\n  useEffect(() => {\r\n    get(\"users\").then(res => {\r\n      setListuser(res.data);\r\n    });\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const userNom = user.nom;\r\n    setUserActuel(userNom);\r\n  }, [load]);\r\n\r\n  const success = () => {\r\n    Modal.success({\r\n      title: \"Confirmation\",\r\n      content: (\r\n        <div>\r\n          <p>Votre poids a bien été enregistré</p>\r\n        </div>\r\n      ),\r\n      onOk() {\r\n        history.push(\"/Home\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const submit = () => {\r\n    let userTrouve;\r\n    for (let user1 of listUser) {\r\n      console.log(user1)\r\n      if (user1.nom == userActuel) {\r\n        userTrouve = user1;\r\n        const user = {\r\n          nom: userTrouve.nom,\r\n          mdp: userTrouve.mdp,\r\n          date: date,\r\n          poids: poids\r\n        };\r\n    \r\n        post(\"form\", user).then(res => {\r\n          const response = res.data;\r\n       \r\n          if (response.msg == \"poids enregistre\") {\r\n            success();\r\n          } else {\r\n            alert(\"ko\");\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"home\">\r\n      <Navside></Navside>\r\n      <div className=\"container-fluid form2\">\r\n        <Form\r\n          labelCol={{\r\n            span: 4\r\n          }}\r\n          wrapperCol={{\r\n            span: 10\r\n          }}\r\n          layout=\"horizontal\"\r\n          initialValues={{\r\n            size: componentSize\r\n          }}\r\n          onValuesChange={onFormLayoutChange}\r\n          size={componentSize}\r\n        >\r\n          <Form.Item label=\"Format des champs\" name=\"size\">\r\n            <Radio.Group>\r\n              <Radio.Button value=\"small\">Small</Radio.Button>\r\n              <Radio.Button value=\"default\">Default</Radio.Button>\r\n              <Radio.Button value=\"large\">Large</Radio.Button>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item name=\"poids\" label=\"Poids\">\r\n            <Input onChange={e => setPoids(e.target.value)} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Date du jour\">\r\n            <DatePicker\r\n              name=\"date\"\r\n              selected={date}\r\n              onChange={date => setDate(date)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Validation\">\r\n            <Button type=\"primary\" htmlType=\"submit\" onClick={submit}>\r\n              Validation\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Formpoids;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Router, Route } from \"react-router-dom\";\r\nimport Creation from \"./Containers/Creation\";\r\nimport Identification from \"./Containers/Identification\";\r\nimport Home from \"./Containers/Home\";\r\nimport AffichageMois from \"./Containers/Affichage-mois\"\r\nimport AffichageTri from \"./Containers/Affichage-tri\"\r\nimport history from \"./history\";\r\nimport FormPoids from \"./Containers/FormPoids\";\r\nexport class Routes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.stat = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Identification></Identification>\r\n          </Route>\r\n          <Route path=\"/Form\">\r\n            <FormPoids></FormPoids>\r\n          </Route>\r\n          <Route path=\"/Home\">\r\n            <Home></Home>\r\n          </Route>\r\n          <Route path=\"/Creation\">\r\n            <Creation></Creation>\r\n          </Route>\r\n          <Route path=\"/Tri\">\r\n            <AffichageTri></AffichageTri>\r\n          </Route>\r\n          <Route path=\"/Mois\">\r\n            <AffichageMois></AffichageMois>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {Routes} from './Routes';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <Routes/>\r\n,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}